# =============================================================================
# Dockerfile Test File with Intentional Errors
# Tests for hadolint
# =============================================================================

# Error: Missing FROM tag version (DL3006)
FROM ubuntu

# Error: Using latest tag (DL3007)
FROM node:latest

# Error: Using sudo (DL3004)
RUN sudo apt-get update

# Error: Not using -y flag with apt-get (DL3008)
RUN apt-get install curl

# Error: Not cleaning apt cache (DL3009)
RUN apt-get update && apt-get install -y python3

# Error: Using ADD instead of COPY for local files (DL3020)
ADD ./app.js /app/

# Error: Using apt-get upgrade (DL3005)
RUN apt-get update && apt-get upgrade -y

# Error: Missing HEALTHCHECK (DL3026) - Will be triggered if container runs a service

# Error: Using cd instead of WORKDIR (DL3003)
RUN cd /app && npm install

# Error: Invalid WORKDIR path
WORKDIR app  # Should use absolute path

# Error: Multiple consecutive RUN instructions (DL3059)
RUN echo "First command"
RUN echo "Second command"
RUN echo "Third command"

# Error: Using wget without install (DL3047)
RUN wget https://example.com/file.tar.gz

# Error: pip without pin version (DL3013)
RUN pip install flask

# Error: npm install without clean (DL3016)
RUN npm install

# Error: Missing user for container (DL3002)
# No USER instruction present

# Error: Using COPY with too broad source
COPY . .

# Error: EXPOSE with invalid port
EXPOSE 80000  # Port > 65535

# Error: ENV with space around equals
ENV NODE_ENV = production

# Error: Multiple ENV instructions (should combine)
ENV VAR1=value1
ENV VAR2=value2
ENV VAR3=value3

# Error: Using MAINTAINER (deprecated) (DL4000)
MAINTAINER old@style.com

# Error: Shell form instead of exec form for CMD
CMD npm start  # Should be CMD ["npm", "start"]

# Error: Having both ENTRYPOINT and CMD in shell form
ENTRYPOINT npm
CMD start

# Error: Using apt without specifying version
RUN apt-get install -y nginx

# Error: Not using COPY --chown
COPY app.js /app/
RUN chown node:node /app/app.js  # Should use COPY --chown

# Error: Using tar without proper flags
RUN tar -xvf archive.tar

# Error: Missing LABEL for metadata
# No LABEL instructions

# Error: Using apk without --no-cache (DL3018)
RUN apk add curl

# Error: Using yum without clean all (DL3032)
RUN yum install -y git

# Error: COPY after RUN (inefficient layering)
RUN npm install
COPY package.json .  # Should COPY first, then RUN

# Error: Not pinning base image digest
FROM alpine  # Should use alpine@sha256:...

# Error: Using rm -rf without caution
RUN rm -rf /var/lib/apt/lists/*  # This is actually good practice but shown for context

# Error: Changing user back to root
USER node
USER root  # Security issue

# Error: Using shell pipes without proper error handling
RUN curl https://example.com | sh  # Dangerous!

# Error: Not escaping newlines properly
RUN apt-get update && \
apt-get install -y \
git \
vim
# Missing backslash after vim

# Error: Using deprecated ONBUILD
ONBUILD RUN echo "Deprecated"

# Error: ARG before FROM (except for FROM argument)
ARG INVALID_ARG=value
FROM ubuntu:20.04

# Error: Hardcoded secrets
ENV API_KEY=hardcoded_secret_key_12345
ENV PASSWORD=admin123

# Error: Using chmod 777
RUN chmod 777 /app

# Error: Not using specific package versions
RUN apt-get install -y \
    curl \
    wget \
    git

# Error: Using apt-key (deprecated)
RUN apt-key adv --keyserver keyserver.ubuntu.com

# Error: Missing .dockerignore reference (can't check but important)
# Should have .dockerignore for node_modules, .git, etc.

# Error: VOLUME after important changes
RUN echo "important data" > /data/file
VOLUME /data  # Data above is lost

# Error: Using localhost in container
RUN curl http://localhost:8080  # Won't work as expected

# Error: Complex RUN without heredoc (for newer Docker)
RUN echo "line1" && \
    echo "line2" && \
    echo "line3" && \
    echo "line4" && \
    echo "line5"

# Error: Not using multi-stage builds for compilation
# Single stage with build tools left in final image

# Error: STOPSIGNAL not appropriate
STOPSIGNAL 9  # Should use SIGTERM (15) first

# Error: Using CMD to run multiple services
CMD service nginx start && npm start  # Anti-pattern

# Error: Not handling signal properly
CMD ["npm", "start"]  # npm doesn't forward signals properly

# Error: Using recursive COPY
COPY / /  # Extremely dangerous

# Error: Missing executable bit preservation
COPY script.sh /usr/local/bin/
# Should use COPY --chmod=755

# Error: Invalid JSON in CMD/ENTRYPOINT
CMD ["npm" "start"]  # Missing comma

# Error: Using EXPOSE for HTTP with string
EXPOSE "80"  # Should be number

# Error: Mixing && and ; in RUN
RUN apt-get update && apt-get install -y curl; echo "done"

# Error: Not validating downloaded files
RUN curl -o file.tar.gz https://example.com/file.tar.gz && \
    tar -xzf file.tar.gz  # No checksum validation

# Error: Using internal registry without TLS verification
# ADD http://internal-registry/package.tar.gz /tmp/  # Commented as it would fail

# Error: Final image too large (can't detect automatically but bad practice)
# No cleanup of build dependencies
